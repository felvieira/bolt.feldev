version: "3.8"
services:
  # Main production service (set as default)
  app:
    build:
      context: .
      dockerfile: Dockerfile-express
      args:
        - SESSION_SECRET=${SESSION_SECRET}
        - SUPABASE_URL=${SUPABASE_URL}
        - SUPABASE_SERVICE_KEY=${SUPABASE_SERVICE_KEY}
        - SUPABASE_ANON_KEY=${SUPABASE_ANON_KEY}
        - NODE_ENV=production
        - REDIS_URL=${REDIS_URL}
    ports:
      - "5173:5173"
    environment:
      - NODE_ENV=production
      - PORT=5173
      - GROQ_API_KEY=${GROQ_API_KEY}
      - HuggingFace_API_KEY=${HuggingFace_API_KEY}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - OPEN_ROUTER_API_KEY=${OPEN_ROUTER_API_KEY}
      - GOOGLE_GENERATIVE_AI_API_KEY=${GOOGLE_GENERATIVE_AI_API_KEY}
      - OLLAMA_API_BASE_URL=${OLLAMA_API_BASE_URL}
      - XAI_API_KEY=${XAI_API_KEY}
      - TOGETHER_API_KEY=${TOGETHER_API_KEY}
      - TOGETHER_API_BASE_URL=${TOGETHER_API_BASE_URL}
      - AWS_BEDROCK_CONFIG=${AWS_BEDROCK_CONFIG}
      - VITE_LOG_LEVEL=${VITE_LOG_LEVEL:-debug}
      - DEFAULT_NUM_CTX=${DEFAULT_NUM_CTX:-32768}
      - RUNNING_IN_DOCKER=true
      - SESSION_SECRET=${SESSION_SECRET}
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_SERVICE_KEY=${SUPABASE_SERVICE_KEY}
      - SUPABASE_ANON_KEY=${SUPABASE_ANON_KEY}
      - DATABASE_URL=${DATABASE_URL}
      - REDIS_URL=${REDIS_URL}
    volumes:
      - session-data:/app/session-data
    # Explicitamente executar o express-entrypoint.sh (sem o supabase-config.sh)
    command: bash /app/express-entrypoint.sh
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5173/health", "||", "exit", "1"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 40s
    restart: unless-stopped
    networks:
      - shared
    

  # Development environment with hot reloading
  app-dev:
    build:
      context: .
      dockerfile: Dockerfile-express
      target: build  # Use the build stage for development
    environment:
      - NODE_ENV=development
      - VITE_HMR_PROTOCOL=ws
      - VITE_HMR_HOST=localhost
      - VITE_HMR_PORT=5173
      - CHOKIDAR_USEPOLLING=true
      - WATCHPACK_POLLING=true
      - PORT=5173
      - GROQ_API_KEY=${GROQ_API_KEY}
      - HuggingFace_API_KEY=${HuggingFace_API_KEY}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - OPEN_ROUTER_API_KEY=${OPEN_ROUTER_API_KEY}
      - XAI_API_KEY=${XAI_API_KEY}
      - GOOGLE_GENERATIVE_AI_API_KEY=${GOOGLE_GENERATIVE_AI_API_KEY}
      - OLLAMA_API_BASE_URL=${OLLAMA_API_BASE_URL}
      - TOGETHER_API_KEY=${TOGETHER_API_KEY}
      - TOGETHER_API_BASE_URL=${TOGETHER_API_BASE_URL}
      - AWS_BEDROCK_CONFIG=${AWS_BEDROCK_CONFIG}
      - VITE_LOG_LEVEL=${VITE_LOG_LEVEL:-debug}
      - DEFAULT_NUM_CTX=${DEFAULT_NUM_CTX:-32768}
      - RUNNING_IN_DOCKER=true
      - SESSION_SECRET=${SESSION_SECRET}
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_SERVICE_KEY=${SUPABASE_SERVICE_KEY}
      - SUPABASE_ANON_KEY=${SUPABASE_ANON_KEY}
      - DATABASE_URL=${DATABASE_URL}
      - REDIS_URL=${REDIS_URL}
    extra_hosts:
      - "host.docker.internal:host-gateway"
    volumes:
      - type: bind
        source: .
        target: /app
        consistency: cached
      - /app/node_modules
      - session-data:/app/session-data
    ports:
      - "5173:5173"
    # Build before starting dev server
    command: bash -c "pnpm run build && pnpm run dev --host 0.0.0.0"
    profiles: ["development"]
    networks:
      - shared

  # Pre-built image option
  app-prebuild:
    image: ghcr.io/stackblitz-labs/bolt.diy:latest 
    ports:
      - "5173:5173"
    environment:
      - NODE_ENV=production
      - PORT=5173
      - OLLAMA_API_BASE_URL=http://127.0.0.1:11434
      - DEFAULT_NUM_CTX=${DEFAULT_NUM_CTX:-32768}
      - RUNNING_IN_DOCKER=true
      - SESSION_SECRET=${SESSION_SECRET}
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_SERVICE_KEY=${SUPABASE_SERVICE_KEY}
      - SUPABASE_ANON_KEY=${SUPABASE_ANON_KEY}
      - DATABASE_URL=${DATABASE_URL}
      - REDIS_URL=${REDIS_URL}
    extra_hosts:
      - "host.docker.internal:host-gateway"
    # Make sure prebuild also builds first
    command: bash -c "pnpm run build && pnpm run dockerstart"
    volumes:
      - session-data:/app/session-data
    profiles: ["prebuilt"]
    networks:
      - shared

networks:
  shared:
    external: true

volumes:
  session-data:
    driver: local
